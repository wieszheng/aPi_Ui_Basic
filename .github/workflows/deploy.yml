# 工作流名称
name: Deploy Python Application
on:
  push:
    branches:
      - master  # 更改为你的默认分支
    # tags:
    #   - 'v*'
# 作业
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8"]
    steps:
    # - uses: actions/checkout@v3
    # - name: Set up Python ${{ matrix.python-version }}
    #   uses: actions/setup-python@v3
    #   with:
    #     python-version: ${{ matrix.python-version }}
    # - name: Install dependencies
    #   run: |
    #     python -m pip install --upgrade pip
    #     pip install pylint
    # - name: Analysing the code with pylint
    #   run: |
    #     pylint $(git ls-files '*.py')
        
    # 下载源码
    - name: Checkout Code
      uses: actions/checkout@master

    # 设置Python并打包
    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@master
      with:
        python-version: ${{ matrix.python-version }}  # Python版本

    # 安装依赖关系
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pylint
    - name: Analysing the code with pylint
      run: |
        pylint $(git ls-files '*.py')
          
    # 发布 Release
    - name: Create Release
      id: create_release
      uses: actions/create-release@master
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    # 上传构建结果到 Release
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@master
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./release.tgz
        asset_name: release.tgz
        asset_content_type: application/x-tgz

    # 部署到服务器
    # - name: Deploy to Server
    #   uses: easingthemes/ssh-deploy@v2.1.5
    #   env:
    #     SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
    #     ARGS: "-o StrictHostKeyChecking=no"
    #   with:
    #     host: ${{ secrets.HOST }}
    #     username: ${{ secrets.USERNAME }}
    #     port: 22
    #     source: ./
    #     destination: /path/to/your/server/directory  # 更改为服务器目录
      
